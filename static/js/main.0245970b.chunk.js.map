{"version":3,"sources":["img/logo.png","components/ui/Header.js","components/characters/CharacterItem.js","components/characters/CharacterCard.js","components/ui/Search.js","App.js","index.js"],"names":["Header","className","src","logo","alt","CharacterItem","item","img","name","portrayed","nickname","birthday","status","CharacterCard","items","isLoading","map","char_id","Search","getQuery","useState","text","setText","type","placeholder","value","onChange","e","q","target","autoFocus","App","setItems","setIsLoading","query","setQuery","useEffect","Axios","then","r","data","catch","err","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAe,G,MAAA,IAA0B,kCCW1BA,EARA,WACX,OACI,wBAAQC,UAAU,SAAlB,SACI,qBAAKC,IAAKC,EAAMC,IAAI,yBCyBjBC,EA7BO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACI,qBAAKL,UAAU,OAAf,SACA,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKC,IAAKI,EAAKC,IAAKH,IAAI,OAE1B,sBAAKH,UAAU,YAAf,UACE,6BAAKK,EAAKE,OACV,+BACE,+BACE,iDADF,IACgCF,EAAKG,aAErC,+BACE,+CADF,IAC8BH,EAAKI,YAEnC,+BACE,+CADF,IAC8BJ,EAAKK,YAEnC,+BACE,6CADF,IAC4BL,EAAKM,sBCPhCC,EAZO,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MACrB,OAD4C,EAAhBC,UAExB,6CAEA,yBAASd,UAAU,QAAnB,SACKa,EAAME,KAAI,SAACV,GAAD,OACP,cAAC,EAAD,CAAkCA,KAAMA,GAApBA,EAAKW,eCmB1BC,EA1BA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACLC,mBAAS,IADJ,mBACtBC,EADsB,KAChBC,EADgB,KAQ7B,OACI,yBAASrB,UAAU,SAAnB,SACI,+BACI,uBACIsB,KAAK,OACLtB,UAAU,eACVuB,YAAY,oBACZC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAbRC,EAawBD,EAAEE,OAAOJ,MAZ/CH,EAAQM,QACRT,EAASS,GAFI,IAACA,GAcFE,WAAS,SCmBdC,EA9BH,WAAM,MAGUX,mBAAS,IAHnB,mBAGTN,EAHS,KAGFkB,EAHE,OAIkBZ,oBAAS,GAJ3B,mBAITL,EAJS,KAIEkB,EAJF,OAKUb,mBAAS,IALnB,mBAKTc,EALS,KAKFC,EALE,KAqBhB,OAbAC,qBAAU,WAENC,IAAM,sDAAD,OAAuDH,IACzDI,MAAK,SAAAC,GAAC,OAAIP,EAASO,EAAEC,SACrBF,KAAKL,GAAa,IAClBQ,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAI7B,CAACR,IAKF,sBAAKjC,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQkB,SAAU,SAACS,GAAD,OAAOO,EAASP,MAClC,cAAC,EAAD,CAAeb,UAAWA,EAAWD,MAAQA,QC7BnD+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0245970b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","import React from 'react';\nimport logo from '../../img/logo.png';\n\nconst Header = () => {\n    return (\n        <header className='center'>\n            <img src={logo} alt='Breaking Bad Logo' />\n        </header>\n    )\n}\n\nexport default Header;\n","import React from 'react';\n\nconst CharacterItem = ({ item }) => {\n    return (\n        <div className='card'>\n        <div className='card-inner'>\n          <div className='card-front'>\n            <img src={item.img} alt='' />\n          </div>\n          <div className='card-back'>\n            <h1>{item.name}</h1>\n            <ul>\n              <li>\n                <strong>Actor Name:</strong> {item.portrayed}\n              </li>\n              <li>\n                <strong>Nickname:</strong> {item.nickname}\n              </li>\n              <li>\n                <strong>Birthday:</strong> {item.birthday}\n              </li>\n              <li>\n                <strong>Status:</strong> {item.status}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default CharacterItem;\n","import React from 'react';\nimport CharacterItem from './CharacterItem';\n\nconst CharacterCard = ({ items, isLoading }) => {\n    return isLoading ? (\n        <h1>Loading....</h1>\n    ) : (\n        <section className='cards'>\n            {items.map((item) => (\n                <CharacterItem key={item.char_id} item={item} />\n            ))}\n        </section>\n    )\n}\n\nexport default CharacterCard;\n\n","import React, { useState } from 'react'\n\nconst Search = ({ getQuery }) => {\n    const [text, setText] = useState('');\n\n    const onChange = (q) => {\n        setText(q);\n        getQuery(q);\n    }\n\n    return (\n        <section className='search'>\n            <form>\n                <input\n                    type='text'\n                    className='form-control'\n                    placeholder='Search characters'\n                    value={text}\n                    onChange={(e) => onChange(e.target.value)}\n                    autoFocus\n                />\n\n            </form>\n            \n        </section>\n    )\n}\n\nexport default Search\n","import React, { useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport './App.css';\nimport Header from './components/ui/Header';\nimport CharacterCard from '../src/components/characters/CharacterCard';\nimport Search from '../src/components/ui/Search';\n\n\nconst App = () => {\n  // hooks: setean los estados de items y los pone en un arr despues de traer la data desde api\n  // el isLoading lo que hace es que por defecto este cargando y cuando la pagina este cargada lo pasa a false\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState('');\n\n\n  useEffect(() => {\n    const fetchItems = () => {\n      Axios(`https://www.breakingbadapi.com/api/characters?name=${query}`)\n        .then(r => setItems(r.data))\n        .then(setIsLoading(false))\n        .catch(err => console.log(err))\n    }\n\n    fetchItems();\n  }, [query]) // useEffect necesita como segundo parametro alguna dependencia\n              // aca le mandamos query en el array porque es una dependecia, necesito que se actualice\n              // el estado query  para habilitar el search y que haga la peticion axios con el query actualizado\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Search getQuery={(q) => setQuery(q)} />\n      <CharacterCard isLoading={isLoading} items={ items }/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}